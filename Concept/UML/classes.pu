@startuml 

package control {
	class IconSetOperator {
		unique_ptr<IconSet> iconSet
		unique_ptr<AbstractScannerStrategy> scannerStrategy
		QUndoStack undoStack
		+ void editIcon(referenceToIcon)
	}
	
	package strategies {
		abstract class AbstractScannerStrategy {
			+ {abstract} unique_ptr<IconSet> loadIconSet()
			+ {abstract} boolean saveIconSet(const IconSet &iconSet)
		}
		class FreedesktopScannerStrategy --|> AbstractScannerStrategy
		class GenericXmlScannerStrategy --|> AbstractScannerStrategy
	}
}

package view {
	class MainWindow {
	}
	
	class IconSetBrowser {
		IconSetView iconSetView
		QTreeView	classificationTreeView
		+ updateIconSet()
	}

	class IconSetView {
	}
}

package model {
	class IconClassification {
		String name
		IconClassification* parent
		QVector<shared_ptr<IconClassification>> children
		QVector<IconClassification::Command> commands
		bool atomic
		bool groupBy
		bool selected
		- setParent()
		+ addChild()
	}
	
	class IconSet {
		unique_ptr<QVector<Icon>> icons
		unique_ptr<IconClassification> classifications
		unique_ptr<QVector<IconGroup>> groups
	}
	
	class IconComponent {
		{abstract} const &QImage getRepresentativeImage()
	}
	
	class IconGroup {
		QVector<IconComponent *> children
	}
	
	class Icon {
		QString name
		QImage image
		Icon* link
		QVector<shared_ptr<IconClassification>> classifications
		+setImage(QImage image)
		+setLink(QLink link)
		+isLinkType()
	}
	
	package access {
		class ClassificationTreeModel {
				IconClassification* root
			}
			
		class IconListModel {
			IconSet* iconSet
		}
	}
}

Icon -- IconClassification
IconSet *-- Icon
IconSet *-- IconClassification
IconSet <-- AbstractScannerStrategy : instantiates
ClassificationTreeModel --> IconClassification
IconListModel --> IconSet
IconClassification *-- IconClassification
MainWindow *-- IconSetBrowser
IconSetView -- IconListModel
IconSetBrowser -- ClassificationTreeModel
IconSetView - IconSetBrowser
IconSetOperator *-- IconSet
IconSetOperator *-- AbstractScannerStrategy
IconSetOperator -- IconSetBrowser
IconComponent <|- Icon
IconComponent <|- IconGroup

note bottom of IconClassification: Ways of classifying and grouping icons. For example "resolution, category or target device".\nTree structure is realized via the list of children and the parent pointer.

note top of FreedesktopScannerStrategy: An exemplary implementation\nthat parses index.theme files\nas often seen with Linux\nicon sets.

note top of GenericXmlScannerStrategy: A generic way of defining icon set structures via XML.\nIn case no specific file format is existant.\nFollowing this apporach Icon Set Forge is hopefully useful\nfor many "non-programmers".

@enduml